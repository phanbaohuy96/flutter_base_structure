part of '%%MODULE_NAME%%_bloc.dart';

class _ViewModel {
  const _ViewModel();

  _ViewModel copyWith() {
    return const _ViewModel();
  }
}

abstract class %%CLASS_NAME%%State {
  final _ViewModel viewModel;

  %%CLASS_NAME%%State(this.viewModel);

  T copyWith<T extends %%CLASS_NAME%%State>({
    _ViewModel? viewModel,
  }) {
    return _factories[T == %%CLASS_NAME%%State ? runtimeType : T]!(
      viewModel ?? this.viewModel,
    );
  }
}

class %%CLASS_NAME%%Initial extends %%CLASS_NAME%%State {
  %%CLASS_NAME%%Initial({
    _ViewModel viewModel = const _ViewModel(),
  }) : super(viewModel);
}

final _factories = <
    Type,
    Function(
  _ViewModel viewModel,
)>{
  %%CLASS_NAME%%Initial: (viewModel) => %%CLASS_NAME%%Initial(
        viewModel: viewModel,
      ),
};